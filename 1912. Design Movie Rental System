import java.util.*;

class MovieRentingSystem {
    Map<Integer, TreeSet<int[]>> available;
    TreeSet<int[]> rented;
    Map<String, Integer> priceMap;

    public MovieRentingSystem(int n, int[][] entries) {
        available = new HashMap<>();
        rented = new TreeSet<>((a, b) -> a[0] != b[0] ? a[0] - b[0] :
                               a[1] != b[1] ? a[1] - b[1] : a[2] - b[2]);
        priceMap = new HashMap<>();
        for (int[] e : entries) {
            int shop = e[0], movie = e[1], price = e[2];
            available.computeIfAbsent(movie, k -> new TreeSet<>((a, b) -> a[0] != b[0] ? a[0] - b[0] : a[1] - b[1]))
                     .add(new int[]{price, shop});
            priceMap.put(shop + "-" + movie, price);
        }
    }

    public List<Integer> search(int movie) {
        List<Integer> res = new ArrayList<>();
        if (available.containsKey(movie)) {
            int count = 0;
            for (int[] e : available.get(movie)) {
                if (count == 5) break;
                res.add(e[1]);
                count++;
            }
        }
        return res;
    }

    public void rent(int shop, int movie) {
        int price = priceMap.get(shop + "-" + movie);
        available.get(movie).remove(new int[]{price, shop});
        rented.add(new int[]{price, shop, movie});
    }

    public void drop(int shop, int movie) {
        int price = priceMap.get(shop + "-" + movie);
        rented.remove(new int[]{price, shop, movie});
        available.get(movie).add(new int[]{price, shop});
    }

    public List<List<Integer>> report() {
        List<List<Integer>> res = new ArrayList<>();
        int count = 0;
        for (int[] e : rented) {
            if (count == 5) break;
            res.add(Arrays.asList(e[1], e[2]));
            count++;
        }
        return res;
    }
}
